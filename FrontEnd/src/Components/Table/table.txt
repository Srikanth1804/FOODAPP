import React, { useState, useEffect } from "react";
import axios from "axios";
import "../Table/TableSelection.css"; // Import the CSS for styling

const TableSelection = () => {
  const [tables, setTables] = useState([]);

  useEffect(() => {
    // Simulate fetching data
    const fetchTables = async () => {
      try {
        const response = await axios.get("/api/tables"); // Adjust the endpoint as needed
        setTables(response.data);
      } catch (error) {
        console.error("Error fetching table data", error);
      }
    };

    fetchTables();
  }, []);

  const handleBookTable = async (tableId, isBooked) => {
    try {
      // Toggle the booking status
      const response = await axios.post(`/api/book/${tableId}`, {
        booked: !isBooked,
      });
      if (response.status === 200) {
        setTables(
          tables.map((table) =>
            table.id === tableId ? { ...table, isBooked: !isBooked } : table
          )
        );
      }
    } catch (error) {
      console.error("Error booking table", error);
    }
  };

  // Function to create rows for the matrix format
  const createTableMatrix = (tables, columns) => {
    let rows = [];
    for (let i = 0; i < tables.length; i += columns) {
      rows.push(tables.slice(i, i + columns));
    }
    return rows;
  };

  const matrix = createTableMatrix(tables, 4); // Adjust the number of columns as needed

  return (
    <div className="table-selection">
      <h2>Select Your Table</h2>
      <div className="table-matrix">
        {matrix.map((row, rowIndex) => (
          <div key={rowIndex} className="table-row">
            {row.map((table) => (
              <div
                key={table.id}
                className={`table-item ${
                  table.isBooked ? "booked" : "available"
                }`}
              >
                <div className="table-info">
                  <h4>{table.name}</h4>
                  <p>{table.isBooked ? "Booked" : "Available"}</p>
                </div>
                <button
                  onClick={() => handleBookTable(table.id, table.isBooked)}
                  className={`book-table-btn ${
                    table.isBooked ? "btn-unbook" : "btn-book"
                  }`}
                >
                  {table.isBooked ? "Cancel Booking" : "Book Table"}
                </button>
              </div>
            ))}
          </div>
        ))}
      </div>
    </div>
  );
};

export default TableSelection;
